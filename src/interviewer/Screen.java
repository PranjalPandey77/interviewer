/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interviewer;

import static java.awt.image.ImageObserver.WIDTH;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Sambhav Kanishka
 */
public class Screen extends javax.swing.JFrame {
 String compiler_no="0";
    int choose_compiler=0;
   
    
    ServerSocket ss =new ServerSocket(6668);//, sms = new ServerSocket(6667);
    Socket s = ss.accept();//,sm = sms.accept();
    DataOutputStream dout, doutm; DataInputStream dis; String str;
    //ServerSocket ss;
    //static{
//        try {
//           //s = new Socket("192.168.137.1",6666);
//            s = new Socket("172.29.44.250",6666);     
//        } catch (IOException ex) {
//            Logger.getLogger(Screen.class.getName()).log(Level.SEVERE, null, ex);
//        }
  //      System.out.println("inside static");
    //}
    /**
     * Creates new form Screen
     */
    public Screen() throws IOException {
        initComponents();
        dout=new DataOutputStream(s.getOutputStream());
       // doutm = new DataOutputStream(sm.getOutputStream());
        Mthread t1 = new Mthread();
        t1.start();
//        try {
//           //s = new Socket("192.168.137.1",6666);
//            s = new Socket("172.29.44.250",6669);     
//        } catch (IOException ex) {
//            Logger.getLogger(Screen.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        question = new javax.swing.JTextField();
        studentName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        code_editor = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        message_display_area = new javax.swing.JTextArea();
        message_area = new javax.swing.JTextField();
        send_btn = new javax.swing.JButton();
        compile_btn = new javax.swing.JButton();
        run_btn = new javax.swing.JButton();
        select_language = new javax.swing.JComboBox<String>();
        select_font_style = new javax.swing.JComboBox<String>();
        select_font_size = new javax.swing.JComboBox<String>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        input_text_tab = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        output_text_tab = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        notes = new javax.swing.JTextArea();
        notes_text = new javax.swing.JTextField();
        save_notes_btn = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        menu_bar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        question.setText("Question");
        question.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionActionPerformed(evt);
            }
        });

        studentName.setEditable(false);
        studentName.setText("Student's Name");
        studentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentNameActionPerformed(evt);
            }
        });

        code_editor.setColumns(20);
        code_editor.setRows(5);
        code_editor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                code_editorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                code_editorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                code_editorKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(code_editor);

        message_display_area.setEditable(false);
        message_display_area.setColumns(20);
        message_display_area.setRows(5);
        jScrollPane2.setViewportView(message_display_area);

        message_area.setText("Message");
        message_area.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                message_areaActionPerformed(evt);
            }
        });

        send_btn.setText("Send");
        send_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                send_btnActionPerformed(evt);
            }
        });

        compile_btn.setText("Compile");
        compile_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compile_btnActionPerformed(evt);
            }
        });

        run_btn.setText("Run");
        run_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                run_btnActionPerformed(evt);
            }
        });

        select_language.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "C", "C++", "JAVA" }));
        select_language.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                select_languageItemStateChanged(evt);
            }
        });

        select_font_style.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        select_font_style.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_font_styleActionPerformed(evt);
            }
        });

        select_font_size.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        select_font_size.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_font_sizeActionPerformed(evt);
            }
        });

        input_text_tab.setColumns(20);
        input_text_tab.setRows(5);
        jScrollPane4.setViewportView(input_text_tab);

        jTabbedPane1.addTab("Input", jScrollPane4);

        output_text_tab.setEditable(false);
        output_text_tab.setColumns(20);
        output_text_tab.setRows(5);
        jScrollPane5.setViewportView(output_text_tab);

        jTabbedPane1.addTab("Output", jScrollPane5);

        notes.setColumns(20);
        notes.setRows(5);
        jScrollPane3.setViewportView(notes);

        notes_text.setEditable(false);
        notes_text.setText("Notes");
        notes_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notes_textActionPerformed(evt);
            }
        });

        save_notes_btn.setText("Save");
        save_notes_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_notes_btnActionPerformed(evt);
            }
        });

        jTextField5.setEditable(false);
        jTextField5.setText("Timer");

        jMenu1.setText("File");
        menu_bar.add(jMenu1);

        jMenu2.setText("Edit");
        menu_bar.add(jMenu2);

        setJMenuBar(menu_bar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(compile_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(run_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(select_language, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(select_font_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(select_font_style, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(question, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentName, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(message_area, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(send_btn))
                    .addComponent(notes_text, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save_notes_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(question, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(compile_btn)
                                .addComponent(run_btn)
                                .addComponent(select_language, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(select_font_style, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(notes_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(select_font_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(studentName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(message_area, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(send_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(save_notes_btn))
                    .addComponent(jTabbedPane1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void run_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_run_btnActionPerformed
        try
        {
            if(choose_compiler==0)
            {
                String s=new Gcc_Compiler().run();
                System.out.println("RECEIVED STRING="+s);
                output_text_tab.setText(s);
            }
            else if(choose_compiler==1)
            {
                String s=new CppCompiler().run();
                System.out.println("RECEIVED STRING="+s);
                output_text_tab.setText(s);
            }
            else if(choose_compiler==2)
            {
                String s=new JavaCompiler().run();
                System.out.println("RECEIVED STRING="+s);
                output_text_tab.setText(s);
            
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_run_btnActionPerformed

    private void save_notes_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_notes_btnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_save_notes_btnActionPerformed

    private void studentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentNameActionPerformed

    private void send_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_send_btnActionPerformed
        // TODO add your handling code here:
//        String string = (String)message_area.getText();
//        try {
//            dout.writeUTF(string);
//        } catch (IOException ex) {
//            Logger.getLogger(Screen.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_send_btnActionPerformed

    private void notes_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notes_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_notes_textActionPerformed

    private void message_areaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_message_areaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_message_areaActionPerformed

    private void select_font_sizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_font_sizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_select_font_sizeActionPerformed

    private void select_font_styleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_font_styleActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_select_font_styleActionPerformed

    private void questionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_questionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_questionActionPerformed

    private void code_editorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_code_editorKeyTyped
        // TODO add your handling code here:
//        System.out.println("inside editor method");
//        try{    
//System.out.println("here");
//dout.writeUTF(code_editor.getText());
//System.out.println(code_editor.getText());
//dout.flush();    
//}
//        catch(Exception e){System.out.println(e + "exception occured");}
    }//GEN-LAST:event_code_editorKeyTyped

    private void code_editorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_code_editorKeyReleased
        // TODO add your handling code here:
//        System.out.println("inside editor method");
        try{    
//System.out.println("here");
dout.writeUTF(code_editor.getText());
//System.out.println(code_editor.getText());
dout.flush();    
}
        catch(Exception e){System.out.println(e + "exception occured");}
    }//GEN-LAST:event_code_editorKeyReleased

    private void code_editorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_code_editorKeyPressed
        // TODO add your handling code here:
        //System.out.println("inside editor method");
//        try{    
////System.out.println("here");
//dout.writeUTF(code_editor.getText());
////System.out.println(code_editor.getText());
//dout.flush();    
//}
//        catch(Exception e){System.out.println(e + "exception occured");}
    }//GEN-LAST:event_code_editorKeyPressed

    private void compile_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compile_btnActionPerformed
        
       try
        {
            if(choose_compiler==0)
            {
                String code=code_editor.getText();
                System.out.println("---------"+code+"----------");
            
                String path = System.getProperty("user.dir");
                System.out.println("------PATH-"+path+"\\q1.c");
                FileWriter fw=new FileWriter(path+"\\q1.c");
                fw.write(code);
                fw.flush();
                fw.close();
                
                System.out.println("hi 2");
                String input=input_text_tab.getText();
                
                System.out.println("---------"+input+"----------");

                FileWriter fw1=new FileWriter(path+"\\input.c");
                fw1.write(input);
                fw1.flush();
                fw1.close();
                
                System.out.println("hi 3");
                String ans=new Gcc_Compiler().compile_only();
                System.out.println("STRING================"+ans);
                output_text_tab.setText(ans);
            }
            else if(choose_compiler==1)
            {
                String code=code_editor.getText();
                System.out.println("---------"+code+"----------");
            
                String path = System.getProperty("user.dir");
                System.out.println("------PATH-"+path+"\\q1.cpp");
                FileWriter fw=new FileWriter(path+"\\q1.cpp");
                fw.write(code);
                fw.flush();
                fw.close();
                
                System.out.println("hi 2");
                String input=input_text_tab.getText();
                
                System.out.println("---------"+input+"----------");

                FileWriter fw1=new FileWriter(path+"\\input.c");
                fw1.write(input);
                fw1.flush();
                fw1.close();
                
                System.out.println("hi 3");
                String ans=new CppCompiler().compile_only();
                System.out.println("STRING================"+ans);
                output_text_tab.setText(ans);
            }   
            else if(choose_compiler==2)
            {
                String code=code_editor.getText();
                System.out.println("---------"+code+"----------");
            
                String path = System.getProperty("user.dir");
                System.out.println("------PATH-"+path+"\\q1.java");
                FileWriter fw=new FileWriter(path+"\\q1.java");
                fw.write(code);
                fw.flush();
                fw.close();
                
                System.out.println("hi 2");
                String input=input_text_tab.getText();
                
                System.out.println("---------"+input+"----------");

                FileWriter fw1=new FileWriter(path+"\\input.c");
                fw1.write(input);
                fw1.flush();
                fw1.close();
                
                System.out.println("hi 3");
                String ans=new JavaCompiler().compile_only();
                System.out.println("STRING================"+ans);
                output_text_tab.setText(ans);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e, str, WIDTH);
        } 
    }//GEN-LAST:event_compile_btnActionPerformed

    private void select_languageItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_select_languageItemStateChanged
        compiler_no=(String)select_language.getSelectedItem();
       if(compiler_no=="C")
       {
         choose_compiler=0;  
       }
       else if(compiler_no=="C++")
       {
           choose_compiler=1;
       }
       else if(compiler_no=="JAVA")
       {
           choose_compiler=2;
       }
            
    }//GEN-LAST:event_select_languageItemStateChanged

    public void func() throws IOException{
       try{//ss=new ServerSocket(6669);
     //  s=new Socket("172.29.43.151",6668);
             // s=new Socket("localhost",6668);
       //System.out.println("inside func");
       dis=new DataInputStream(s.getInputStream());
       while(true){
       //System.out.println("inf"); 
       str=(String)dis.readUTF();  
       //System.out.println("message= "+str); 
       code_editor.setText(str);
//       str=(String)dis.readUTF();  
//       System.out.println("message= "+str); 
//       jTextArea1.setText(str);
//       str=(String)dis.readUTF();  
//       System.out.println("message= "+str); 
//       jTextArea1.setText(str);
       }
    //ss.close();  
}catch(Exception e){System.out.println(e);} 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Screen().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Screen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea code_editor;
    private javax.swing.JButton compile_btn;
    private javax.swing.JTextArea input_text_tab;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JMenuBar menu_bar;
    private javax.swing.JTextField message_area;
    private javax.swing.JTextArea message_display_area;
    private javax.swing.JTextArea notes;
    private javax.swing.JTextField notes_text;
    private javax.swing.JTextArea output_text_tab;
    private javax.swing.JTextField question;
    private javax.swing.JButton run_btn;
    private javax.swing.JButton save_notes_btn;
    private javax.swing.JComboBox<String> select_font_size;
    private javax.swing.JComboBox<String> select_font_style;
    private javax.swing.JComboBox<String> select_language;
    private javax.swing.JButton send_btn;
    private javax.swing.JTextField studentName;
    // End of variables declaration//GEN-END:variables

private class Mthread extends Thread{
    @Override
    public void run(){
        try {
            func();
        } catch (IOException ex) {
            Logger.getLogger(Screen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    }
    
}
